@using POS_API.Model
@model List<ParsedElement>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>POS Documentation</title>

    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.dataTables.min.css">

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f8f9fa;
            color: #343a40;
        }

        h1 {
            text-align: center;
            margin-bottom: 10px;
            color: #007bff;
        }

        #selectedButtonMessage {
            text-align: center;
            font-size: 18px;
            color: #343a40;
            margin-bottom: 20px;
        }

        .container {
            max-width: 100%;
            margin: 0 auto;
            padding: 20px;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .button-group {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

            .button-group button {
                padding: 10px 20px;
                margin: 0 10px;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
                transition: background-color 0.3s ease;
            }

                .button-group button:hover {
                    background-color: #0056b3;
                }

        table.dataTable thead th {
            background-color: #007bff;
            color: white;
        }

        table.dataTable tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        table.dataTable tbody tr:hover {
            background-color: #e8f0fe;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>POS Documentation</h1>

        <!-- Selected Button Message -->
        <div id="selectedButtonMessage">Please select a button to view its data.</div>

        <!-- Buttons -->
        <div class="button-group">
            <button onclick="loadData('https://receiptservice.egretail.cloud/ARTSPOSLogSchema/2.2.1', 'ReceiptARTSPOSLog')">ReceiptARTSPOSLog</button>
            <button onclick="loadData('https://receiptservice.egretail.cloud/ARTSPOSLogSchema/6.0.0', 'ReceiptARTSPOSLogVersion6')">ReceiptARTSPOSLogVersion6</button>
        </div>

        <!-- Dynamic Table -->
        <table id="parsedTable" class="display nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>Element Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var element in Model)
                {
                    <tr>
                        <td>@element.ElementName</td>
                        <td>@element.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Include DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize DataTables without responsive feature
            $('#parsedTable').DataTable({
                responsive: false,  // Disable the responsive feature to keep the rows visible
                paging: true,
                searching: true,
                ordering: true,
                language: {
                    search: "Search:",
                    lengthMenu: "Display _MENU_ records per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ records",
                    paginate: {
                        previous: "Previous",
                        next: "Next"
                    }
                },
                order: [[0, 'asc']] // Default sorting on the first column
            });

            // If there's a stored button name, update the message
            const selectedButton = localStorage.getItem('selectedButton');
            if (selectedButton) {
                document.getElementById('selectedButtonMessage').innerText = `Selected Button: ${selectedButton}`;
            }
        });

        // Function to load data for different URLs and update the message
        function loadData(url, buttonName) {
            // Update the message below the heading
            document.getElementById('selectedButtonMessage').innerText = `Selected Button: ${buttonName}`;

            // Store the selected button name in localStorage
            localStorage.setItem('selectedButton', buttonName);

            // Load the data (example functionality, adapt as needed)
            const queryParam = new URLSearchParams({ url });
            window.location.href = `/Home/Index?${queryParam}`;
        }
    </script>
</body>
</html>
